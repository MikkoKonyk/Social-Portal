Administration:
1. Rename objs:
- Account -> Customer
- Contact -> Employee

2. Create new fields on the Contact obj:
- FingerprintId (text 11 symbs)
- PortalUser (boolean)
- SelfRegistered (boolean)
- Birthday (date)
- Type (multi-picklist)
	values: Technical, Hosting, Commercial, Social
- Department (picklist)
	values: Engineering, Finance, Human Resources, IT, Logistics, etc...

3. Create new fields on the Account obj:
- VAT (text 10 with 2 capital letter at the beginning)
- Company Email Address (email)

4. Create Custom object "Access Right":
- Level (picklist)
	values: 0,1,2,3
- Feature (picklist)
	values: Weather, ...

- Contact (master-detail)
...

5. Create Permission Sets & Custom Permissions:
	- create Permission sets based on Access Rights:
		records: Unassigned, Portal User, Admin
	- create Custom Permissions:
		records: MyProfile_Read, MyProfile_Edit, CompanyProfile_Read, CompanyProfile_Edit, UserManagement_Read, UserManagement_Edit

6. Create Community "Social Portal" (all VF pages indicated here are from future tasks, so can create them empty for now):
	- name: SF Social Portal or SF_Social_Portal
	- template: Salesforce Tabs + Visualforce
	- preferences:
		Show nicknames - true
		Enable direct messages - true
		Allow discussion threads - true
		Let guest users view asset files on public and login page - true
		Show all settings in Workspaces - true
	- members:
		Profiles:
			Customer Community
			Customer Community Plus
		Permission Sets:
			Unassigned
			Portal User
			Admin
	- login&registration:
		Login Page Type - VF page Login (custom VF)
		Allow internal users to log in directly to the community - true
		Forgot Password - VF ForgotPassword
		Reset Password - VF ChangePassword
		Allow external users to self-register - true
		Registration Page Type - VF Registration
		Profile - Customer Community User
		Account - leave blank
	- emails:
		From Name: SF Social Portal
		Email Address: sp_admin@social-portal.com
	- pages: leave as it is for now

Trailhead:
	1. https://trailhead.salesforce.com/content/learn/modules/identity_login/identity_login_sso
	2. https://trailhead.salesforce.com/content/learn/modules/identity_basics/identity_basics_protocols
	3. https://trailhead.salesforce.com/content/learn/modules/lex_implementation_user_setup_mgmt
	4. https://trailhead.salesforce.com/content/learn/modules/community_rollout_impl
	5. https://trailhead.salesforce.com/content/learn/modules/identity_external


Data Management:
1. Generate test data for the org: Account, Contact about 100 records with external tool and save as .csv
2. Import .csv file with test data to the org using Data Loader app or Dataloader.io
3. Populate some Account (based on your choice) with Contacts.
1 accs - 20 conts
2 accs - 15 conts
3 accs - 10 conts
4 accs - 5 conts
100 contacs in total should be separated per 10 accounts

Development:
1. Trigger on Account that checks if the VAT has 2 capital letters at the beginning when Account is created or updated.
2. Develop Anonymus script to populate all Account recs with VAT field, VAT field format "AA00000000". Each Account has to have different VATs.
3. Create VF Page with Apex controller to create/edit new Contacts:
	- Make sure Account is required field for every Contact
	- Selfregistered field is hidden until PortalUser field is checked
	- later for the communitt, rework Account lookup to input with results (using js)
4. Create VF component "FileUpload" that is rendered on the VF page when it is Contact Edit:
	- add posibility to upload the file as Attachment under particular Contact
	- allowed files to upload: jpg,jpeg,jpe,png
	- file must not have size bigger than 1 Mb, otherwise show error msg
	- create "Upload" btn, when pressed -> insert the file as Attachment related to Contact, but should not reload the page!

    - user can upload up to 5 files. Files can be cleared, not more than 1Mb
5. Create Template page that contains Header and Footer components. This page will be included as template page for each community portal page.
6. Create SocialPortal public page available for everyone.
7. Create Login page, to allow registered users logs in to the community. There should be a link "Forgot your Password?" which opens modal window with the input for Username. When user entered username and pressed "Send" btn, SF should send new link on user email to generate password. (This is SF standard fucntionality)
8. Create Registration page to allow users self-register to the community.
9. Create ChangePassword page where user can update his password.
9. Create Home page for logged-in users. Note: after successful login the user must be redirected to this page.
10. Create MyProfile page where the user can change his user data. This page includes Personal Info, Company Info, Password Change tabs as VF components. Tabs should be horizontal.
11. Create PersonalInfo component where user can change data like Name, Birthday, Country, etc
12. Create Company Info component where user can change company (Account) data if he has appropriate rights.
13. Create ChangePassword component where user can update his password.
